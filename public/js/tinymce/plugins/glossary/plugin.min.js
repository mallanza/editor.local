// tinymce/plugins/glossary/plugin.min.js
(function() {
  console.log('Glossary plugin loaded');


  tinymce.PluginManager.add('glossary', function(editor, url) {
    console.log('Glossary plugin init');


    // Fake glossary data
    const glossary = [
      { id: 1, term: 'CONFIDENTIAL', slug: 'confidential', definition: 'Information that must be kept secret.' },
      { id: 2, term: 'RISK',         slug: 'risk',         definition: 'Potential for loss or harm.' },
      { id: 3, term: 'COMPLIANCE',   slug: 'compliance',   definition: 'Adherence to laws and policies.' }
    ];

    // Wrap plain occurrences of each term in <a>
    function linkTerms(html) {
      glossary.forEach(({ term, slug, definition }) => {
        const re = new RegExp(`(?![^<]*>)(\\b${term}\\b)(?![^<]*>)`, 'gi');
        html = html.replace(re, match =>
          `<a href="/glossary#${slug}" class="glossary-term" title="${definition.replace(/"/g,'&quot;')}">${match}</a>`
        );
      });
      return html;
    }

    // Auto-link only on the initial SetContent to avoid infinite loops
    editor.on('SetContent', function(e) {
      if (e.initial) {
        console.log('Glossary plugin auto-link initial content');
        const content = editor.getContent({ format: 'html' });
        const linked = linkTerms(content);
        if (linked !== content) {
          editor.setContent(linked, { format: 'html', no_events: true });
        }
      }
    });

    // Toolbar button for manual linking
    editor.ui.registry.addButton('glossary', {
      icon: 'bookmark',
      //icon: false,
	  image: url + '/glossary-icon.png',
      imageDimensions: { width: 20, height: 20 },
      tooltip: 'Link to glossary term',
      onAction: function() {
        const selText = editor.selection.getContent({ format: 'text' });
        if (!selText) {
          return editor.notificationManager.open({ text: 'Select text to link to glossary.' });
        }
        const choices = glossary.map(t => t.term).join(', ');
        const chosen = prompt(`Link "${selText}" to one of: ${choices}`);
        const entry = glossary.find(t => t.term.toLowerCase() === (chosen || '').toLowerCase());
        if (entry) {
          editor.execCommand('mceReplaceContent', false,
            `<a href=\"/glossary#${entry.slug}\" class=\"glossary-term\" title=\"${entry.definition.replace(/"/g,'&quot;')}\">${selText}</a>`
          );
        } else {
          editor.notificationManager.open({ text: 'Term not found in glossary.' });
        }
      }
    });

    // Return plugin metadata for TinyMCE 7
    return {
      getMetadata: function() {
        return {
          name: 'Glossary Plugin',
          url: 'https://yourdomain.com/docs/glossary-plugin'
        };
      }
    };
  });
})();
